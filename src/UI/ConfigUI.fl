# data file for the Fltk User Interface Designer (fluid)
version 1.0109
header_name {.h} 
code_name {.cpp}
comment {//
// Original ZynAddSubFX author Nasca Octavian Paul
// Copyright (C) 2002-2005 Nasca Octavian Paul
// Copyright 2009, Alan Calvert
//
// This file is part of yoshimi, which is free software: you can redistribute
// it and/or modify it under the terms of version 2 of the GNU General Public
// License as published by the Free Software Foundation.
//
// yoshimi is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.   See the GNU General Public License (version 2 or
// later) for more details.
//
// You should have received a copy of the GNU General Public License along with
// yoshimi; if not, write to the Free Software Foundation, Inc., 51 Franklin
// Street, Fifth Floor, Boston, MA  02110-1301, USA.
//
// This file is a derivative of the ZynAddSubFX original, modified October 2009
//} {in_source in_header
} 

decl {\#include <cmath>} {public
} 

decl {\#include <FL/Fl_File_Chooser.H>} {public
} 

decl {\#include "globals.h"} {public
} 

decl {\#include "Misc/Config.h"} {public
} 

class ConfigUI {open
} {
  Function {make_window()} {open
  } {
    Fl_Window configwindow {
      label {ZynAddSubFX Settings}
      callback {writebankcfg();
          o->hide();} open
      xywh {945 521 465 335} type Double hide
    } {
      Fl_Tabs {} {open
        xywh {5 5 520 325}
      } {
        Fl_Group {} {
          label {Main settings} open
          xywh {5 25 505 285} hide
        } {
          Fl_Choice {} {
            label OscilSize
            callback {Runtime.settings.Oscilsize = 128 << o->value();}
            tooltip {ADSynth Oscillator Size (samples)} xywh {190 90 100 20} down_box BORDER_BOX textsize 10
            code0 {o->value( (int)(logf(Runtime.settings.Oscilsize / 128.0 - 1.0) / logf(2.0)) + 1);}
          } {
            MenuItem {} {
              label 128
              xywh {25 25 100 20} labelfont 1
            }
            MenuItem {} {
              label 256
              xywh {35 35 100 20} labelfont 1
            }
            MenuItem {} {
              label 512
              xywh {45 45 100 20} labelfont 1
            }
            MenuItem {} {
              label 1024
              xywh {45 45 100 20} labelfont 1
            }
            MenuItem {} {
              label 2048
              xywh {55 55 100 20} labelfont 1
            }
            MenuItem {} {
              label 4096
              xywh {55 55 100 20} labelfont 1
            }
            MenuItem {} {
              label 8192
              xywh {65 65 100 20} labelfont 1
            }
            MenuItem {} {
              label 16384
              xywh {75 75 100 20} labelfont 1
            }
          }
          Fl_Box {} {
            label {Most settings has effect only after ZynAddSubFX is restarted.}
            xywh {31 275 406 30} labelfont 1 labelsize 11 align 128
          }
          Fl_Counter {} {
            label {XML compression level}
            callback {Runtime.settings.GzipCompression=(int) o->value();}
            tooltip {gzip compression level (0 - uncompressed)} xywh {191 198 65 20} type Simple align 4 minimum 0 maximum 9 step 1 textsize 12
            code0 {o->value(Runtime.settings.GzipCompression);}
          }
          Fl_Choice {} {
            label {PADsynth Interpolation}
            callback {Runtime.settings.Interpolation=(int) o->value();}
            xywh {190 126 100 20} down_box BORDER_BOX textsize 13
            code0 {o->value(Runtime.settings.Interpolation);}
          } {
            MenuItem {} {
              label {Linear(fast)}
              xywh {0 0 100 20} labelfont 1 labelsize 10
            }
            MenuItem {} {
              label {Cubic(slow)}
              xywh {10 10 100 20} labelfont 1 labelsize 10
            }
          }
          Fl_Choice {} {
            label {Virtual Keyboard Layout}
            callback {Runtime.settings.VirKeybLayout=(int) o->value();;}
            xywh {190 162 100 20} down_box BORDER_BOX textfont 1 textsize 13
            code0 {o->value(Runtime.settings.VirKeybLayout);}
          } {
            MenuItem {} {
              label { }
              xywh {5 5 100 20} labelfont 1 labelsize 11 deactivate
            }
            MenuItem {} {
              label QWERTY
              xywh {15 15 100 20} labelfont 1 labelsize 11
            }
            MenuItem {} {
              label Dvorak
              xywh {25 25 100 20} labelfont 1 labelsize 11
            }
            MenuItem {} {
              label QWERTZ
              xywh {35 35 100 20} labelfont 1 labelsize 11
            }
          }
        }
        Fl_Group {} {
          label {Bank root dirs}
          xywh {5 25 500 285} hide
        } {
          Fl_Browser rootsbrowse {
            callback {activatebutton_rootdir(o->value()!=0);}
            xywh {15 35 485 220} type Hold
          }
          Fl_Button {} {
            label {Add root directory...}
            callback {const char *dirname;
                dirname = fl_dir_chooser("Add a root directory for banks:", NULL, 0);
                if (dirname == NULL)
                    return;
                rootsbrowse->add(dirname);}
            xywh {15 265 80 35} box THIN_UP_BOX align 128
          }
          Fl_Button removerootdirbutton {
            label {Remove root dir...}
            callback {if (rootsbrowse->value() != 0)
                {
                    rootsbrowse->remove(rootsbrowse->value());
                }
                activatebutton_rootdir(false);}
            xywh {105 265 80 35} box THIN_UP_BOX align 128
            code0 {o->deactivate();}
          }
          Fl_Button makedefaultrootdirbutton {
            label {Make default}
            callback {int n = rootsbrowse->value();
                if (n != 0)
                {
                    rootsbrowse->move(1, n);
                    rootsbrowse->value(1);
                    rootsbrowse->redraw();
                }
                activatebutton_rootdir(true);}
            xywh {190 265 80 35} box THIN_UP_BOX align 128
            code0 {o->deactivate();}
          }
        }
        Fl_Group {} {
          label {Presets dirs}
          xywh {5 25 500 285} hide
        } {
          Fl_Browser presetbrowse {
            callback {activatebutton_presetdir(o->value()!=0);}
            xywh {15 35 485 220} type Hold
          }
          Fl_Button {} {
            label {Add preset directory...}
            callback {const char *dirname;
                dirname = fl_dir_chooser("Add a preset directory :", NULL, 0);
                if (dirname == NULL)
                    return;
                presetbrowse->add(dirname);}
            xywh {15 265 80 35} box THIN_UP_BOX align 128
          }
          Fl_Button removepresetbutton {
            label {Remove preset dir...}
            callback {if (presetbrowse->value() != 0)
                {
                    presetbrowse->remove(presetbrowse->value());
                }
                activatebutton_presetdir(false);}
            xywh {105 265 80 35} box THIN_UP_BOX align 128
            code0 {o->deactivate();}
          }
          Fl_Button makedefaultpresetbutton {
            label {Make default}
            callback {int n = presetbrowse->value();
                if (n != 0)
                {
                    presetbrowse->move(1, n);
                    presetbrowse->value(1);
                    presetbrowse->redraw();
                }
                activatebutton_presetdir(true);}
            xywh {190 265 80 35} box THIN_UP_BOX align 128
            code0 {o->deactivate();}
          }
        }
        Fl_Group {} {
          label Jack open selected
          xywh {15 35 500 285}
        } {
          Fl_Input {} {
            label {Jack Server}
            callback {Runtime.settings.LinuxJACKserver = string(o->value());}
            tooltip {Name of the jack server to connect to - default, ...} xywh {179 106 179 22}
            code0 {o->insert(Runtime.settings.LinuxJACKserver.c_str());}
          }
        }
        Fl_Group {} {
          label Alsa open
          xywh {10 45 500 285} hide
        } {
          Fl_Input {} {
            label {Alsa Midi Device}
            callback {Runtime.settings.LinuxALSAmidiDev = string(o->value());}
            tooltip {Alsa midi device - default, hw:0, ...} xywh {195 143 172 22}
            code0 {o->insert(Runtime.settings.LinuxALSAmidiDev.c_str());}
          }
          Fl_Input {} {
            label {Alsa Audio Device}
            callback {Runtime.settings.LinuxALSAaudioDev = string(o->value());}
            tooltip {Alsa audio device - default, hw:0, front:CARD=Live,DEV=0, ...} xywh {195 93 172 22}
            code0 {o->insert(Runtime.settings.LinuxALSAaudioDev.c_str());}
          }
        }
      }
      Fl_Button {} {
        label Close
        callback {configwindow->hide();
            writebankcfg();
            writepresetcfg();}
        xywh {200 315 105 20} box THIN_UP_BOX
      }
    }
  }
  Function {ConfigUI()} {open
  } {
    code {make_window();
        readbankcfg();
        readpresetcfg();} {}
  }
  Function {activatebutton_rootdir(bool active)} {open
  } {
    code {if (active)
        {
            removerootdirbutton->activate();
            makedefaultrootdirbutton->activate();
        }
        else
        {
            removerootdirbutton->deactivate();
            makedefaultrootdirbutton->deactivate();
        }} {}
  }
  Function {activatebutton_presetdir(bool active)} {} {
    code {if (active)
        {
            removepresetbutton->activate();
            makedefaultpresetbutton->activate();
        }
        else
        {
            removepresetbutton->deactivate();
            makedefaultpresetbutton->deactivate();
        }} {}
  }
  Function {readbankcfg()} {} {
    code {rootsbrowse->clear();
        for (int i = 0; i < MAX_BANK_ROOT_DIRS; ++i)
        {
            if (Runtime.settings.bankRootDirlist[i].size())
                rootsbrowse->add(Runtime.settings.bankRootDirlist[i].c_str());
        }} {}
  }
  Function {writebankcfg()} {} {
    code {Runtime.clearBankrootDirlist();
        for (int n = 0; n < rootsbrowse->size(); ++n)
            Runtime.settings.bankRootDirlist[n] = string(rootsbrowse->text(n + 1));
    } {}
  }
  Function {readpresetcfg()} {} {
    code {presetbrowse->clear();
        for (int i = 0; i < MAX_BANK_ROOT_DIRS; ++i)
            if (Runtime.settings.presetsDirlist[i].size())
                presetbrowse->add(Runtime.settings.presetsDirlist[i].c_str());
    } {}
  }
  Function {writepresetcfg()} {} {
    code {
        Runtime.clearPresetsDirlist();
        for (int n = 0; n < presetbrowse->size(); ++n)
            Runtime.settings.presetsDirlist[n] = string(presetbrowse->text(n + 1));
    } {}
  }
  Function {show()} {} {
    code {configwindow->show();} {}
  }
} 
