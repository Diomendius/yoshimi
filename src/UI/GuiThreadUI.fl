# data file for the Fltk User Interface Designer (fluid)
version 1.0109
header_name {.h}
code_name {.cc}
comment {//
// Copyright 2009, Alan Calvert
//
// This file is part of yoshimi, which is free software: you can
// redistribute it and/or modify it under the terms of the GNU General
// Public License as published by the Free Software Foundation, either
// version 3 of the License, or (at your option) any later version.
//
// yoshimi is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with yoshimi.  If not, see <http://www.gnu.org/licenses/>.} {in_source in_header
}

decl {\#include <string>} {public
}

decl {using namespace std;} {public
}

decl {\#include "Misc/Master.h"} {public
}

decl {\#include "MasterUI.h"} {public
}

decl {MasterUI* guiMaster;} {public
}

decl {pthread_t pthreadGui = 0;} {global
}

Function {guiThread(void* arg)} {private return_type {void*}
} {
  code {
    guiMaster->showUI();
    while (!Pexitprogram)
    {
        Fl::wait();
    }
    return 0;
  } {}
}

Function {startGuiThread(void)} {return_type bool}
{
  code {
    int chk;
    pthread_attr_t attr;
    if (!(chk = pthread_attr_init(&attr)))
        if (!(chk = pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED)))
            if (!(chk = pthread_create(&pthreadGui, &attr, guiThread, NULL)))
                return true;
    return false;
  } {selected}
}

Function {stopGuiThread(void)} {return_type void}
{
  code {
    Pexitprogram = true;
    if (pthreadGui)
        pthread_cancel(pthreadGui);
  } {selected}
}
